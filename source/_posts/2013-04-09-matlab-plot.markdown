---
layout: post
title: "matlab 做图的基本概念"
date: 2013-04-09 22:47
comments: true
categories: [coding,vivian]
---

matlab 做图，主要可以分成两种情况:

1. 根据函数做图，比如 y=x 的函数图像。
2. 根据散点拟合函数图像，这些散点往往是一组实验数据。

我始终认为，若要快速而又牢固的掌握一门知识，最简洁的方法就是：

    自己先思考怎么解决这个问题，然后再看当前的主流解决方案。

不管是算法，还是语法，都是有章可循的，无需背诵。

<!--more-->

人的做图算法
------------

中学时代，不懂电脑，我们是怎么作函数图像的？

取点 -> 描点 -> 连点成线。

其中，取点是比较有学问的，比如:
直线取 2 点，抛物线要取到最低点。
连点成线也很有技巧，直线直着连，曲线圆滑着连。

如果是根据散点做图，那就省了取点的步骤，
但是，连点成线的时候，往往不知道该用什么样的圆滑曲线。

matlab 作图算法的本质
---------------------

这里详细介绍[人的算法与计算机算法的区别](http://jackonyang.github.io/blog/2013/04/09/algrithm_basic/)

根据对人的做图算法的分析，我们可以发现：
做图的本质就是连点成线，计算机完全可以胜任这个工作。
而难点就在于连点成线时，使用什么样的圆滑曲线。

根据微积分的思想，
只要我们把点取的足够密集，点与点之间的连线都可以看作是直线。
所以，只要能取足够密集的点，用直线连接即可。
这种算法是非常适合于计算机来实现的。

matlab 做图的本质就是：取点、描点、连点成线。
任何复杂的做图都可以拆解为这三步来实现。

1. 取点

    如果是根据散点做图，点已经取好。

    如果是函数图像，取一组 x，根据函数图像计算出 y 值即可。
    当然，根据 y 计算 x 也一样。

2. 描点

    把刚刚取好的一组 x 和 y 画上去即可。

3. 连点成线

    一般用直线连接起来即可。

matlab 做图的具体方法与语法
---------------------------

#### 最简单的基础图 `plot(x,y)`

取点的本质就是生成两个长度相同的向量。
方法很多，也不是做图的重点。
此处不详细说明。

有了散点之后就是描点，用命令 `plot(x,y)`。
其中，x 是横坐标，y 是纵坐标。
如果是一组点，那么只要把 x,y 分别变成矩阵即可。

连点成线时，通常用直线直接连就是了，
所以也就没必要让大家手动执行，matlab 自动完成了。

#### 控制线的形状和颜色 `plot(x,y,'r:')`

如果我们在一个图中做了很多条线，那就需要控制一下线的形状和颜色了。

鉴于连点成线是自动完成的，最好的办法是：
plot 时明确指明线的形状和颜色，以取代默认设置。

具体到语法层面，每一种颜色、形状都有一个代号，
比如红色是 `r`，白色是 `w`，`-`是实线。
更多的代号，找一本matlab教材或者自带的help文档查看一下即可。
所以，最后的命令格式是 `plot(x,y,'r:')`(红色虚线)。
注意，要加上单引号，否则，matlab会处理为名字为 r 的变量。

控制点的形状 `plot(x,y,'o')`
--------------------------

一般，连点成线以后，只关心函数图像，而不关心具体的点。
但也有例外，比如: 根据实验测得的散点做出函数图像，
我们首先关心散点在图像上的具体位置。

理论上，可以通过控制点的形状和颜色让点更加醒目，与控制线的形状和颜色一样。
实际上，点的颜色是否醒目，受线的颜色影响很大，不适合采用。
而且，只通过点的形状就足以让点变的醒目。
所以，我们只需用代号控制点的形状即可，比如`x`是叉，`o`是圆圈。

`plot(x,y,'r:*')` 红色虚线，星状的点。

{% img /images/matlab_plot_basic.png %}

控制做图细节
------------

这一部分东西，如果要细说起来，无穷无尽。
一些人喜欢通过展示各种边边角角的细节证明自己精通 matlab。

我想，重要的是：我们需要那些功能，如何实现这些功能。
只要熟练掌握一种适合自己方法即可。

以下几个命令较为实用：

1. 图形保持与关闭保持。

    默认关闭，即做图时会覆盖以前的图。若不希望被覆盖，则 hold on.

2. 图形标注。

    具体包括：标题、每一条图像的含义、横纵坐标轴的含义。
    对应的命令分别是 title, legend, xlabel/ylabel.

3. 给特殊点加注释。

   `text(x,y,'desc')` 其中 x,y 是横纵坐标。

源码与效果图如下：

{% include_code 标注图形细节 lang:matlab plot_detail.m%}

{% img /downloads/code/plot_detail.png %}
