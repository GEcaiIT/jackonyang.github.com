---
layout: post
title: "vim 快速移动"
date: 2013-03-22 18:23
comments: true
categories: vim
---

vim 支持众多快速跳转命令，以至于，只有想不到的，没有做不到的。

我所需要的快速移动命令，分类如下：

1. 通用移动命令: 在行列、单词、句子间快速移动，查找, marker等;
2. 代码相关移动: 变量/函数/类定义之间跳动，文件间跳动。

详细说明如下：

<!--more-->

### 通用移动命令

##### 行列位置移动

1. 上下左右移动: hjkl
2. 跳转至特定行：nG. n为跳转的行数。
3. 文件头尾：gg/G

##### 语义移动

语义移动，即: 以单词、句子、段落等为单位的移动。

1. 单词。下一个单词开头 w, 下一个结尾 e, 上一个开头 b。若不在当前单词的结尾/开头，e/b 则是跳至当前单词的尾/头，否则是下一单词的尾/头。
2. 句子间跳转 ()，
3. 段落间跳转 {}

##### 查找移动

即：移动到特定字符处。

1. nfa: f 是关键词。找到之后的第 n 个 a。
2. `n*`: 找到之后的第 n 个当前单词。# 向前查找。
2. /xxx: 一个强大的搜索引擎搜索 xxx。支持正则。n/N 向下/上继续搜索。

##### 特殊重要位置

ma 标记当前位置为 a，'a 调至 a 处。

##### 屏幕位置操作

查看大量 log 时比较常用。

1. ctrl+f: 下一屏。
2. ctrl+b: 上一屏。
3. H, L, M: 屏幕的最上/最下/中间

### 代码相关移动

代码与普通文件主要区别是: 1. 增加了变量/函数/类等的定义，2. 涉及多文件相互导入。

##### 变量的定义与使用之间移动。

ctags 可以很好的实现跳转至变量定义处。若要跳转至使用处，则需要 cscope。
从个人实践来看，ctags 是最佳选择。
因为，cscope 使用相对复杂一些，而增加的功能，并不怎么重要。
甚至，我们在编码的过程中，不应该关心谁调用了自己，甚至让他们影响了模块的设计。
重构阶段，修改函数/变量的定义会对第三方造成影响，那也要用重构工具，而不是跳来跳去手动改。

`ctags -R` 会在当前目录下迭代创建一个 tags 文件。

1. tags 定义处 \<c-]\>。若多处定义，g\<c-]\> 给出列表。
2. \<c-t\> 回到前一个 tag。
3. tags show tags history
4. tags tagsname tagsname 的一个匹配处。

##### 文件之间跳动

gf 跳到光标所在文件名的文件。适合于 inclue/import 行。
